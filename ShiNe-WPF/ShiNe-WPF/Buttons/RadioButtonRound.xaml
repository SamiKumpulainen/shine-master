<RadioButton x:Class="ShiNe_WPF.Buttons.RadioButtonRound"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
             xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
             x:Name="roundRadioButton" Style="{DynamicResource NiceRadioButtonNavigationStyle}">
    <RadioButton.Resources>
        <Style x:Key="NiceRadioButtonNavigationStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.2"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(ed:Arc.ArcThickness)" Storyboard.TargetName="arc">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="arc">
                                                <EasingColorKeyFrame KeyTime="0" Value="#AAFFDD00"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="arcChecked">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="arc">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontWeight)" Storyboard.TargetName="textBlock1">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <FontWeight>Bold</FontWeight>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ed:Arc x:Name="arc" ArcThickness="0.05" ArcThicknessUnit="Percent" Margin="0" EndAngle="360" Fill="#FFFFDD00" Height="{Binding ImgWidth}" Width="{Binding ImgWidth}" HorizontalAlignment="Center" Stretch="None" Stroke="#FFDD00" StartAngle="0" StrokeThickness="0" Visibility="Visible"/>
                            <ed:Arc x:Name="arcChecked" ArcThickness="1" ArcThicknessUnit="Percent" Margin="0" EndAngle="360" Fill="#FFFFDD00" Height="{Binding ImgWidth}" Width="{Binding ImgWidth}" HorizontalAlignment="Center" Stretch="None" Stroke="#FFC0E306" StartAngle="0" StrokeThickness="0" Opacity="100" Visibility="Collapsed"/>

                            <Image IsHitTestVisible="False" Width="{Binding ImgWidth}" x:Name="image1" Source="{Binding ImgSource}" HorizontalAlignment="Center" VerticalAlignment="Stretch" Margin="0" RenderOptions.BitmapScalingMode="Fant" RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="0.8" ScaleX="0.8"/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                            <TextBlock x:Name="textBlock1" Grid.Row="1" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="WrapWithOverflow" Text="{Binding ButtonText, FallbackValue=DEFAULT}" FontWeight="DemiBold" Foreground="White" VerticalAlignment="Top" Margin="1,2" FontSize="15" MinHeight="1" MinWidth="1" TextDecorations="{x:Null}"/>

                            <!--<ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->

                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </RadioButton.Resources>
</RadioButton>
